apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "io.defy.chicken.lover"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.1"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        def SERVER_URL = "SERVER_URL"
        def SERVER_IMG_BASE_URL = "SERVER_IMG_BASE_URL"
        def APP_VERSION = "APP_VERSION"
        def AES_SECRET_KEY = "AES_SECRET_KEY"

        debug {
            buildConfigField "String", SERVER_URL, "\"http://13.209.66.202/\""
            buildConfigField "String", SERVER_IMG_BASE_URL, "\"chickenlover/mobile/board/img/\""
            buildConfigField "String", APP_VERSION, "\"0.0.1\""
            buildConfigField "String", AES_SECRET_KEY, "\"wkdefymagicshow\""
        }

        release {
            buildConfigField "String", SERVER_URL, "\"http://127.0.0.1/\""
            buildConfigField "String", APP_VERSION, "\"0.0.1\""
            buildConfigField "String", AES_SECRET_KEY, "\"wkdefymagicshow\""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}

kapt {
    mapDiagnosticLocations = true
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'


    implementation 'com.android.support:animated-vector-drawable:28.0.0'
    implementation "com.android.support:support-compat:28.0.0"
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support:multidex:1.0.3'

    /* Retrofit2 */
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation "com.squareup.retrofit2:retrofit:2.3.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.retrofit2:converter-gson:2.3.0"
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    /* LOG */
    implementation 'com.jakewharton.timber:timber:4.7.0'

    /* Glide */
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.7.1'

    /* Circle ImageView */
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    implementation 'com.android.support:cardview-v7:28.0.0-alpha1'

    /* */
    implementation 'com.ssomai:android.scalablelayout:2.1.6'

    implementation 'com.werb.pickphotoview:pickphotoview:0.4.6'

    /* leak canary */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.2'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.2'

    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
